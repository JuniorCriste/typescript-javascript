<style>
#layout {
width: 60%;
margin: auto;
}
</style>
<div id="layout">
<center><b><h3>Primeiros Passos com IONIC</b></center></h3>

<p><b>Criando Projeto:</b> <br />
ionic start <b>nome</b> <b>template</b> 
<br /> Exemplo: <br />

ionic start <b>cobaia</b> <b>tabs</b> <br />
Escolha uma framework javascript para usar. <br />


</p>
<hr>
<br />


<center><b><h3>Angular</b></center></h3>

<p>Os aplicativos do Angular são modulares. Os módulos são chamados de NgModules e são contêineres para um bloco coeso de código dedicado a um domínio da aplicação, um fluxo de trabalho ou um conjunto de recursos intimamente relacionados. Um módulo pode conter componentes, provedores de serviço e outros arquivos de código. Cada aplicação Angular possui um módulo raiz denominado AppModule, que fornece o mecanismo de bootstrap para iniciar o aplicativo.
</p>
<hr>
<br />

<center><b><h3>Serviços</b></center></h3>

<p>Serviço (ou provedor de serviço) é normalmente uma classe com um propósito estreito e bem definido, para fazer algo específico e bem feito. Pode ser utilizada por outros componentes (páginas) do projeto. São importantes para para aumentar a modularidade e a capacidade de reutilização, pois ao separar as funcionalidades de visualização e de processamento, é possível tornar os componente mais enxutos e eficientes. <br/>
Na CLI do Ionic é possível criar serviços com o seguinte comando: <br/>
<i>ionic generate service &lt;nome-do-serviço&gt; </i>
</p>
<hr>
<br />


<center><b><h3>Diretivas do Angular</b></center></h3>

<p>Diretivas do Angular são extensões da linguagem HTML para permitir a implementação de novos comportamentos de forma declarativa. Dessa forma, não será necessário implementar muitos códigos em HTML, basta apenas utilizar essas diretivas.
O Angular possui várias diretivas, mas vamos apresentar apenas as diretivas que serão utilizadas neste curso: ngIf e ngFor.
</p>
<hr>
<br />


<center><b><h3>REST API</b></center></h3>

<p>Uma API REST (REpresentational State Transfer) é um modelo para uma API que usa solicitações HTTP para acessar e usar dados de um servidor. Uma API para um site da Web é um código que permite que dois programas de software se comuniquem.
<br />
A tecnologia REST é geralmente preferida em relação a outras tecnologias porque usa menos largura de banda, tornando-a mais adequada para o uso eficiente da Internet.
<be />
Para troca de dados, geralmente é utilizado o formato JSON (JavaScript Object Notation) que é um formato leve, "autodescritivo" e fácil de entender para armazenar e transportar dado.
</p>
<hr>
<br />


<center><b><h3>JSON</b></center></h3>

<p>JSON (JavaScript Object Notation) é um formato utilizado para alimentação de dados, como por exemplo em uma API.
</p>
<hr>
<br />





<center><b><h3>Comandos Avulsos</b></center></h3>

<p>
<b>Criando Projeto:</b> <i>ionic start [nome] [template]</i><br />
<b>Criar página:</b> <i>ionic generate page [nome da página]</i><br />
<b>Criar serviço:</b> <i>ionic generate service [api/user]</i><br />
<b>Servir, testar, rodar aplicação ionic no navegador:</b> <i>ionic serve</i><br />
<b>Servir, testar, rodar aplicação ionic no navegador:</b> <i>ionic serve</i><br />
<b>Servir, testar, rodar aplicação ionic no navegador:</b> <i>ionic serve</i><br />
</p>
<hr>
<br />








</div>
